{"version":3,"sources":["service/_DATA.js","actions/index.js","components/Nav.js","actions/types.js","components/Login.js","components/Result.js","components/Question.js","components/LeaderBoard.js","components/QuestionItem.js","components/QuestionList.js","components/Home.js","components/RouteAuth.js","App.js","reducers/auth.js","reducers/users.js","reducers/questions.js","reducers/index.js","store/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","Nav","state","activeItem","handleItemClick","e","setState","logOut","props","signOut","history","push","this","auth","Menu","secondary","Item","active","onClick","as","Link","to","position","user","Label","color","Image","avatar","spaced","src","Icon","size","Component","mapDispatchToProps","type","withRouter","connect","ownProps","Login","userId","handleChange","value","location","signIn","from","replace","opts","Object","keys","map","index","key","image","Grid","style","height","className","Column","maxWidth","Header","icon","textAlign","circular","Content","Segment","basic","Dropdown","placeholder","fluid","selection","options","onChange","Button","primary","login","disabled","Result","optOneCount","length","optTwoCount","totalVotes","optOnePer","optTwoPer","ribbon","floating","showRibbonForOptionOne","includes","showRibbonForOptionTwo","optOneColor","optTwoColor","Divider","columns","Row","Group","verticalAlign","Message","Progress","percent","progress","Question","handleAnswerChange","handleAnswerSubmit","preventDefault","match","params","updateAnswerAsync","handleSubmit","addQuestionAsync","Description","Form","onSubmit","Field","Radio","label","checked","content","Input","horizontal","uid","qid","answer","dispatch","getState","API","then","updateAnswer","addQuestion","LeaderBoard","usersArr","answersCount","questionsCount","total","sort","a","b","divided","relaxed","Statistic","Value","QuestionItem","useHistory","Meta","Extra","floated","QuestionList","activeIndex","handleTabChange","questionIds","answered","filter","questionId","unAnswered","panes","menuItem","render","Tab","Pane","link","onTabChange","defaultActiveIndex","React","Home","children","remainingProps","isAuthenticated","pathname","App","initUsersAsync","initQuestionsAsync","Container","path","exact","initUsers","initQuestions","initialState","action","updatedUsers","forEach","combineReducers","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","store","appStore","document","getElementById"],"mappings":"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","file":"static/js/main.3dc1dffe.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: '../../images/snow.jpg',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: '../../images/tyler.jpg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: '../../images/leaf.jpg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillian'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question)\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  INIT_USERS,\n  INIT_QUESTIONS,\n  UPDATE_ANSWER,\n  ADD_QUESTION,\n} from './types';\nimport * as API from '../service/_DATA';\n\nexport const signIn = (user) => ({\n  type: SIGN_IN,\n  user,\n});\n\nexport const signOut = () => ({\n  type: SIGN_OUT,\n});\n\nconst initUsers = (users) => ({\n  type: INIT_USERS,\n  users,\n});\n//ASYNC REDUX THUNK\nexport const initUsersAsync = () => {\n  return (dispatch, getState) => {\n    return API._getUsers().then((users) => {\n      dispatch(initUsers(users));\n    });\n  };\n};\n\nconst initQuestions = (questions) => ({\n  type: INIT_QUESTIONS,\n  questions,\n});\n\nexport const initQuestionsAsync = () => {\n  return (dispatch, getState) => {\n    return API._getQuestions().then((questions) =>\n      dispatch(initQuestions(questions))\n    );\n  };\n};\n\nconst updateAnswer = (uid, qid, answer) => {\n  return {\n    type: UPDATE_ANSWER,\n    uid,\n    qid,\n    answer,\n  };\n};\n\nexport const updateAnswerAsync = (uid, qid, answer) => {\n  return (dispatch, getState) => {\n    return API._saveQuestionAnswer({ authedUser: uid, qid, answer }).then(\n      () => {\n        dispatch(updateAnswer(uid, qid, answer));\n      }\n    );\n  };\n};\n\nconst addQuestion = (question) => {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n};\n\nexport const addQuestionAsync = (optionOneText, optionTwoText, author) => {\n  return (dispatch, getState) => {\n    return API._saveQuestion({ optionOneText, optionTwoText, author }).then(\n      (question) => {\n        dispatch(addQuestion(question));\n      }\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport { Menu, Icon, Image, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { signOut } from '../actions';\n\nimport { withRouter } from 'react-router';\n\nclass Nav extends Component {\n  state = { activeItem: 'home' };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  logOut = () => {\n    this.props.signOut();\n    this.props.history.push('/login');\n  };\n\n  render() {\n    const { activeItem } = this.state;\n    const { auth } = this.props;\n\n    return (\n      <Menu secondary>\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n          as={Link}\n          to='/'\n        />\n        <Menu.Item\n          name='newQuestion'\n          active={activeItem === 'newQuestion'}\n          onClick={this.handleItemClick}\n          as={Link}\n          to='/question'\n        />\n        <Menu.Item\n          name='leaderBoard'\n          active={activeItem === 'leaderBoard'}\n          onClick={this.handleItemClick}\n          as={Link}\n          to='/leaderboard'\n        />\n        <Menu.Menu position='right'>\n          <Menu.Item name='user'>\n            {auth && auth.user ? (\n              <Label as='a' color={'blue'}>\n                <Image avatar spaced='right' src={auth.user.avatarURL} />\n                {auth && auth.user && auth.user.name}\n              </Label>\n            ) : (\n              <Icon name='user' size='large' />\n            )}\n          </Menu.Item>\n          <Menu.Item name='logout' onClick={() => this.logOut()} />\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth: state.auth,\n  };\n};\nconst mapDispatchToProps = {\n  signOut,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Nav));\n","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const INIT_USERS = 'INIT_USERS';\nexport const INIT_QUESTIONS = 'INIT_QUESTIONS';\n\nexport const UPDATE_ANSWER = 'UPDATE_ANSWER'\n\nexport const ADD_QUESTION = 'ADD_QUESTION'\n","import React, { Component } from 'react';\nimport {\n  Header,\n  Button,\n  Icon,\n  Grid,\n  Segment,\n  Dropdown,\n} from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\n\nimport { signIn } from '../actions';\n\n\nimport {withRouter} from 'react-router'\n\nclass Login extends Component {\n  state = { userId: null };\n  login() {\n    const { location } = this.props;\n    const { state } = location;\n    this.props.signIn(this.props.users[this.state.userId]);\n\n    if (state && state.from) {\n      this.props.history.replace(state.from);\n      return;\n    }\n \n      this.props.history.push('/');\n  }\n\n  handleChange = (e, { value }) => this.setState({ userId: value });\n\n  render() {\n    const gridStyle = {\n      height: '60vh',\n    };\n    const columnWidth = { maxWidth: '450px' };\n    const classNames = 'center aligned middle aligned';\n\n    const opts = Object.keys(this.props.users).map((id, index) => {\n      const user = this.props.users[id];\n\n      return {\n        key: id,\n        value: id,\n        text: user.name,\n        image: {\n          avatar: true,\n          src: `https://i.pravatar.cc/150?img=${index + 1}`,\n        },\n      };\n    });\n\n    return (\n      <Grid style={gridStyle} className={classNames}>\n        <Grid.Column style={columnWidth}>\n          <Header as='h2' icon textAlign='center'>\n            <Icon name='sign-in' circular />\n            <Header.Content>Login</Header.Content>\n          </Header>\n\n          <Segment basic>\n            <Dropdown\n              placeholder='Select Friend'\n              fluid\n              selection\n              options={opts}\n              value={this.state.userId}\n              onChange={this.handleChange}\n            />\n          </Segment>\n\n          <Button size='huge' primary onClick={() => this.login()}  { ...(this.state.userId===null? {disabled:true}:null)} >\n            <Icon name='send'></Icon>Login\n          </Button>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  signIn,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth: state.auth,\n    users: state.users,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import React from 'react';\nimport {\n  Divider,\n  Segment,\n  Grid,\n  Header,\n  Message,\n  Progress,\n  Label,\n  Item,\n} from 'semantic-ui-react';\n\nconst Result = (props) => {\n  const { question, author, user } = props;\n  const optOneCount = question.optionOne.votes.length;\n  const optTwoCount = question.optionTwo.votes.length;\n  const totalVotes = optOneCount + optTwoCount;\n  const optOnePer = (optOneCount / totalVotes) * 100;\n  const optTwoPer = (optTwoCount / totalVotes) * 100;\n\n  const ribbon = () => (\n    <Label color='yellow' floating>\n      Your Vote\n    </Label>\n  );\n\n  const showRibbonForOptionOne = question.optionOne.votes.includes(user.id)\n    ? ribbon()\n    : null;\n  const showRibbonForOptionTwo = question.optionTwo.votes.includes(user.id)\n    ? ribbon()\n    : null;\n\n  const optOneColor = question.optionOne.votes.includes(user.id)\n    ? { color: 'green' }\n    : null;\n  const optTwoColor = question.optionTwo.votes.includes(user.id)\n    ? { color: 'green' }\n    : null;\n\n  return (\n    <Segment>\n      <Header as='h1'>Asked by {author.name}</Header>\n      <Divider></Divider>\n      <Grid columns={2}>\n        <Grid.Row>\n          <Grid.Column>\n            <Item.Group>\n              <Item>\n                <Item.Image size='small' src={user.avatarURL} />\n                <Item.Content verticalAlign='middle'>\n                  <Header as='h3'>Result</Header>\n                  <Message size='big' {...optOneColor}>\n                    Would you rather {question.optionOne.text}\n                    {showRibbonForOptionOne}\n                    <Progress percent={optOnePer} progress />\n                    {`${optOneCount} out of ${totalVotes} votes.`}\n                  </Message>\n                  <Message size='big' {...optTwoColor}>\n                    Would you rather {question.optionTwo.text}\n                    {showRibbonForOptionTwo}\n                    <Progress percent={optTwoPer} progress />\n                    {`${optTwoCount} out of ${totalVotes} votes.`}\n                  </Message>\n                </Item.Content>\n              </Item>\n            </Item.Group>\n          </Grid.Column>\n          <Grid.Column></Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default Result;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Result from '../components/Result';\n\nimport { updateAnswerAsync, addQuestionAsync } from '../actions/index';\n\nimport {\n  Divider,\n  Segment,\n  Form,\n  Grid,\n  Header,\n  Radio,\n  Item,\n} from 'semantic-ui-react';\n\nclass Question extends Component {\n  state = { optionOne: '', optionTwo: '' };\n\n  handleAnswerChange = (e, { value }) => this.setState({ value });\n\n  handleAnswerSubmit = (e) => {\n    e.preventDefault();\n\n    const { value } = this.state;\n    const { match, questions, auth } = this.props;\n    const { id } = match.params;\n    const question = id && questions[id];\n\n    this.props.updateAnswerAsync(auth.user.id, question.id, value);\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { optionOne, optionTwo } = this.state;\n    this.props.addQuestionAsync(optionOne, optionTwo, this.props.auth.user.id);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { optionOne, optionTwo } = this.state;\n    const { match, questions, users, auth } = this.props;\n    const { id } = match.params;\n    const question = id && questions[id];\n    const author = question && users[question.author];\n\n    const isAnswered =\n      question &&\n      (question.optionOne.votes.includes(auth.user.id) ||\n        question.optionTwo.votes.includes(auth.user.id));\n\n    return isAnswered ? (\n      <Result question={question} author={author} user={auth.user}></Result>\n    ) : (\n      <Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column></Grid.Column>\n            <Grid.Column>\n              {question ? (\n                <Fragment>\n                  <Item.Group>\n                    <Item>\n                      <Item.Image size='small' src={author.avatarURL} />\n\n                      <Item.Content>\n                        <Item.Header as='a'>{author.name} asks:</Item.Header>\n                        <Item.Description>\n                          <Header as='h5'>Would you rather</Header>\n                          <Form onSubmit={this.handleAnswerSubmit}>\n                            <Form.Field>\n                              <Radio\n                                label={question.optionOne.text}\n                                name='radioGroup'\n                                value='optionOne'\n                                checked={this.state.value === 'optionOne'}\n                                onChange={this.handleAnswerChange}\n                              />\n                            </Form.Field>\n                            <Form.Field>\n                              <Radio\n                                label={question.optionTwo.text}\n                                name='radioGroup'\n                                value='optionTwo'\n                                checked={this.state.value === 'optionTwo'}\n                                onChange={this.handleAnswerChange}\n                              />\n                            </Form.Field>\n\n                            <Form.Button\n                              content='Submit'\n                              {...(this.state.value\n                                ? null\n                                : { disabled: true })}\n                              primary\n                            />\n                          </Form>\n                        </Item.Description>\n                      </Item.Content>\n                    </Item>\n                  </Item.Group>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Header as='h2'>Create new Question</Header>\n                  <Header as='h5'>Would you rather</Header>\n                  <Form onSubmit={this.handleSubmit}>\n                    <Form.Input\n                      placeholder='be a front-end developer'\n                      name='optionOne'\n                      value={optionOne}\n                      onChange={this.handleChange}\n                    />\n                    <Divider horizontal>Or</Divider>\n                    <Form.Input\n                      placeholder='full-stack developer'\n                      name='optionTwo'\n                      value={optionTwo}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Button\n                      content='Submit'\n                      {...(optionOne === '' || optionTwo === ''\n                        ? { disabled: true }\n                        : null)}\n                      primary\n                    />\n                  </Form>\n                </Fragment>\n              )}\n            </Grid.Column>\n            <Grid.Column></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    questions: state.questions,\n    users: state.users,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = {\n  updateAnswerAsync,\n  addQuestionAsync,\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Question)\n);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Item, Header, Statistic, Grid } from 'semantic-ui-react';\n\nclass LeaderBoard extends Component {\n\n  render() {\n    const { users } = this.props;\n\n    const usersArr = Object.keys(users)\n      .map((id) => {\n        const answersCount = Object.keys(users[id].answers).length;\n        const questionsCount = users[id].questions.length;\n        return {\n          ...users[id],\n          answersCount: answersCount,\n          questionsCount: questionsCount,\n          total: answersCount + questionsCount,\n        };\n      })\n      .sort((a, b) => b.total - a.total);\n\n    return (\n      <Item.Group divided>\n        {usersArr.map((user) => (\n          <Item key={user.id}>\n            <Item.Image src={user.avatarURL} />\n\n            <Item.Content verticalAlign='middle'>\n              <Item.Header>{user.name}</Item.Header>\n\n              <Item.Description>\n                <Grid relaxed columns={2}>\n                  <Grid.Column>\n                    <Header size='small'>\n                      \n                      Answered Questions: {user.answersCount}\n                    </Header>\n                    <Header size='small'>\n                      Created Questions: {user.questionsCount}\n                    </Header>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Statistic size='large'>\n                      <Statistic.Label>Score</Statistic.Label>\n                      <Statistic.Value>{user.total}</Statistic.Value>\n                    </Statistic>\n                  </Grid.Column>\n                </Grid>\n              </Item.Description>\n            </Item.Content>\n          </Item>\n        ))}\n      </Item.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.users,\n  };\n};\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React, { Fragment } from 'react';\nimport {useHistory} from 'react-router';\nimport { Item, Button, Icon } from 'semantic-ui-react';\n\nconst QuestionItem = (props) => {\n  const { question, author } = props;\n  let history = useHistory();\n  return (\n    <Fragment>\n      <Item>\n        <Item.Image size='tiny' src={author.avatarURL} />\n\n        <Item.Content>\n          <Item.Header>{author.name} asks</Item.Header>\n          <Item.Meta>Would you rather</Item.Meta>\n\n          <Item.Description>{question.optionOne.text}</Item.Description>\n\n          <Item.Extra>\n            <Button primary floated='right' onClick={() => history.push(`/question/${question.id}`)}>\n              View Poll\n              <Icon name='right chevron' />\n            </Button>\n          </Item.Extra>\n        </Item.Content>\n      </Item>\n    </Fragment>\n  );\n};\n\nexport default QuestionItem;\n","import React from 'react';\nimport { Item, Tab } from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\n\nimport QuestionItem from '../components/QuestionItem';\n\nclass QuestionList extends React.Component {\n  state = { activeIndex: 1 };\n\n  handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n  render() {\n    const { questions, auth, users } = this.props;\n\n    const questionIds = Object.keys(questions);\n\n    const answered = questionIds\n      .filter((questionId) => {\n        return (\n          questions[questionId].optionOne.votes.includes(auth.user.id) ||\n          questions[questionId].optionTwo.votes.includes(auth.user.id)\n        );\n      })\n      .map((id) => ({ id, timestamp: questions[id].timestamp }))\n      .sort((a, b) => b.timestamp - a.timestamp);\n\n    const unAnswered = questionIds\n      .filter(\n        (questionId) =>\n          !questions[questionId].optionOne.votes.includes(auth.user.id) &&\n          !questions[questionId].optionTwo.votes.includes(auth.user.id)\n      )\n      .map((id) => ({ id, timestamp: questions[id].timestamp }))\n      .sort((a, b) => b.timestamp - a.timestamp);\n\n    const panes = [\n      {\n        menuItem: 'Un Answered Questions',\n        render: () => (\n          <Tab.Pane>\n            <Item.Group>\n              {unAnswered.map(({ id }) => {\n                const question = questions[id];\n                const author = users[question.author];\n                return (\n                  <QuestionItem\n                    key={question.id}\n                    question={question}\n                    author={author}\n                  ></QuestionItem>\n                );\n              })}\n            </Item.Group>\n          </Tab.Pane>\n        ),\n      },\n      {\n        menuItem: 'Answered Questions',\n        render: () => (\n          <Tab.Pane>\n            <Item.Group link>\n              {answered.map(({ id }) => {\n                const question = questions[id];\n                const author = users[question.author];\n                return (\n                  <QuestionItem\n                    key={question.id}\n                    question={question}\n                    author={author}\n                  ></QuestionItem>\n                );\n              })}\n            </Item.Group>\n          </Tab.Pane>\n        ),\n      },\n    ];\n\n    return (\n      <div>\n        <Tab\n          panes={panes}\n          onTabChange={this.handleTabChange}\n          defaultActiveIndex={0}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.users,\n    questions: state.questions,\n    auth: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(QuestionList);\n","import React, { Component } from 'react';\nimport QuestionList from '../components/QuestionList'\n\n\nclass Home extends Component {\n  render() {\n    return <QuestionList></QuestionList>;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nfunction RouteAuth({children, auth, ...remainingProps}) {\n\n    return (\n      <Route\n        {...remainingProps}\n        render={({ location }) =>\n          auth && auth.isAuthenticated ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  const mapStateToProps = (state, ownProps) => {\n      return {\n          auth: state.auth\n      }\n  }\n\n  export default connect(mapStateToProps)(RouteAuth)\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Question from './components/Question';\nimport LeaderBoard from './components/LeaderBoard';\nimport Home from './components/Home';\nimport RouteAuth from './components/RouteAuth';\n\nimport { initUsersAsync, initQuestionsAsync } from './actions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initUsersAsync();\n    this.props.initQuestionsAsync();\n  }\n\n  render() {\n    const { auth } = this.props;\n\n    return (\n      <Container>\n        {auth.isAuthenticated ? <Nav></Nav> : null}\n\n        <Switch>\n        <Route path='/login'>\n            <Login />\n          </Route>\n\n          <RouteAuth>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/question/:id'>\n              <Question />\n            </Route>\n            <Route exact path='/question'>\n              <Question />\n            </Route>\n            <Route path='/leaderboard'>\n              <LeaderBoard />\n            </Route>\n          </RouteAuth>\n\n        </Switch>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = {\n  initUsersAsync,\n  initQuestionsAsync,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.user\n      };\n    }\n    case SIGN_OUT: {\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { INIT_USERS, UPDATE_ANSWER, ADD_QUESTION } from '../actions/types';\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case INIT_USERS:\n      const { users } = action;\n      let updatedUsers = {};\n\n      Object.keys(users).forEach((id, index) => {\n        updatedUsers[id] = {\n          ...users[id],\n          avatarURL: `https://i.pravatar.cc/150?img=${index + 1}`,\n        };\n      });\n      return updatedUsers;\n\n    case UPDATE_ANSWER:\n      return {\n        ...state,\n        [action.uid]: {\n          ...state[action.uid],\n          answers: {\n            ...state[action.uid].answers,\n            [action.qid]: action.answer,\n          },\n        },\n      };\n\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.author]: {\n          ...state[action.question.author],\n          questions: state[action.question.author].questions.concat([action.question.id])\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","import { INIT_QUESTIONS, UPDATE_ANSWER, ADD_QUESTION } from '../actions/types';\n\nconst questions = (state = [], action) => {\n  switch (action.type) {\n    case INIT_QUESTIONS:\n      return action.questions;\n    case UPDATE_ANSWER:\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([action.uid]),\n          },\n        },\n      };\n\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [action.question.id]: action.question,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default questions;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport users from './users';\nimport questions from './questions'\n\nexport default combineReducers({\n  auth,\n  users,\n  questions\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\n\nimport thunk from 'redux-thunk'\n\nexport default createStore(rootReducer,applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport appStore from './store';\n\nReactDOM.render(\n  <Provider store={appStore}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}